#include<bits/stdc++.h>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
int top(char c)
{
  if(c=='+')
  	return 0;
  else if(c=='-')
  	return 1;
  else if(c=='*')
  	return 2;
  else if(c=='/')
  	return 3;
  else if(c=='(')
  	return 4;
  else if(c==')')
  	return 5;
  else if(c=='i')
  	return 6;
  else if(c=='$')
  	return 7;
  else if(c=='E')
  	return 8;
  else if(c=='T')
  	return 9;
  else if(c=='F')
  	return 10;
  else
  	return -100;
  
  
}
int main()
{
	int shiftmove[16][8]={
{-1,-1,-1,-1,4,-1,5,-1},
{6,7,-1,-1,-1,-1,-1,90},
{0,0,8,9,-1,0,-1,0},
{0,0,0,0,-1,0,-1,0},
{-1,-1,-1,4,-1,5,-1},
{0,0,0,0,-1,0,-1,0},



{-1,-1,-1,-1,4,-1,5,-1},
{-1,-1,-1,-1,4,-1,5,-1},
{-1,-1,-1,-1,4,-1,5,-1},
{-1,-1,-1,-1,4,-1,5,-1},

{6,7,-1,-1,-1,15,-1,-1},
{0,0,8,9,-1,0,-1,0},
{0,0,8,9,0,0,-1,-1},
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0},
};

int reducemove[16][8]={
{0,0,-1,-1,0,-1,0,-1},
{0,0,-1,-1,-1,-1,-1,1},
{3,3,0,0,-1,3,-1,3},
{6,6,6,6,-1,6,-1,6},
{-1,-1,-1,-1,0,-1,0,-1},


{8,8,8,8,-1,8,-1,8},
{-1,-1,-1,-1,0,-1,0,-1},
{-1,-1,-1,-1,0,-1,0,-1},
{-1,-1,-1,-1,0,-1,0,-1},
{-1,-1,-1,-1,0,-1,0,-1},
{0,0,-1,-1,-1,0,-1,-1},


{1,1,0,0,-1,1,-1,1},
{2,2,0,0,-1,2,-1,2},
{4,4,4,4,-1,4,-1,4},
{5,5,5,5,-1,5,-1,5},
{7,7,7,7,-1,7,-1,7},
};
int gotomove[16][3]=
{
	{1,2,3},
	{-1,-1,-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{2,2,3},
	{-1,-1,-1},
	{-1,11,3},
	{-1,12,3},
	{-1,-1,13},
	{-1,-1,14},
	{-1,-1,-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{-1,-1,-1}
};
char production[8][2]
{
	{'E','3'},
	{'E','3'},
	{'E','1'},
	{'T','3'},
	{'T','3'},
	{'T','1'},
	{'F','3'},
	{'F','1'}
};
cout<<"Enter string to parse"<<endl;
string s1;
cin>>s1;
s1.push_back('$');
vector<char>v1;
v1.push_back('$');
v1.push_back(0);
for(int i=0;i<s1.size()&&v1.size()>0;)
{

	char c1=s1[i];
	int a1=top(c1);//no ie index,column no
	if(a1==90)
	{
		cout<<"ACCEPTED";
		break;
	}
	 if(*(v1.end()-1)=='$' && s1[i]=='$')
         {
         	cout<<"ACCEPTED"<<endl;
         	break;
         }
	
	if(a1<=7)//goto
	{


	int st1=int(*(v1.end()-1));//initially 0//row no
	cout<<"input "<<s1[i]<<"stack "<<int(*(v1.end()-1))<<endl;
	cout<<" row "<<st1<<" column = "<<a1<<endl;
	int r1=shiftmove[st1][a1];
	cout<<"goes to "<<r1<<endl;
	//if(st1==1&&r1)
	if(s1[i]=='$'&&st1==1)
	{
		cout<<"ACCEPTED";
		break;
	}
	if(r1<0)
	{
		cout<<"ERROR";
		break;
	}
	if(r1>0)
	{
       v1.push_back(char(s1[i]));
       i++;
        v1.push_back(char(r1));

	}
	if(r1==0)
	{
       int r2=reducemove[st1][a1]-1;
       char c2=production[r2][0];//state
       int c3=int(production[r2][1])-48;//no of element to pop
      // cout<<"production state no "<<r2<<endl;
      // cout<<"production state"<<c2<<endl;
     //  cout<<"top of stack"<<c2<<endl;
       //cout<<"element to pop "<<c3<<endl;
         for(int u=0;u<c3*2;u++)
         v1.pop_back();
         v1.push_back(c2);
          int r3=top(c2);
         int r4=int(*(v1.end()-2));
         int r5=gotomove[r4][r3-8];
        
         v1.push_back(char(r5));
        // i++;

    /*   for(int u=0;u<c3*2;u++)
         v1.pop_back();
         v1.push_back(c2);
       // v1.
         int r3=top(c2);
         int r4=int(*(v1.end()-2))-48;
         int r5=gotomove[r4][r3-8];
         v1.push_back(char(r5));*/
        // cout<<"row  is "<<r4<<endl;
        // cout<<"column  is "<<r3<<endl;
        // cout<<"pushed is "<<char(r5);
         //cout<<"pushed is "<<char(r5);
       //  i++;cout<<"production state no "<<r2<<endl;
       //cout<<"production state"<<c2<<endl;
      // cout<<"top of stack"<<c2<<endl;
       //cout<<"element to pop "<<c3*2<<endl;

       if(*(v1.end()-1)=='$' && s1[i]=='$')
         {
         	cout<<"ACCEPTED"<<endl;
         	break;
         }
	}
}
else if(a1>7&&a1<=10)//actio
{
	a1=a1-7;
	int st1=int(*(v1.end()-1));//initially 0
	int r1=gotomove[st1][a1];
	cout<<" row "<<st1<<" column = "<<a1<<endl;
	
	cout<<"goes to "<<r1<<endl;
	if(s1[i]=='$'&&st1==1)
	{
		cout<<"ACCEPTED";
		break;
	}
	if(r1<0)
	{
		cout<<"ERROR";
		break;
	}
	if(r1>0)
	{
       v1.push_back(char(s1[i]));
       v1.push_back(char(r1));
       i++;

	}
	if(r1==0)
	{
       int r2=reducemove[st1][a1]-1;
       char c2=production[r2][0];
       int c3=int(production[r2][1]);//no of element to pop
       cout<<"production state no "<<r2<<endl;
       cout<<"production state"<<c2<<endl;
       cout<<"top of stack"<<c2<<endl;
       cout<<"element to pop "<<c3<<endl;
       for(int u=0;u<c3*2;u++)
         v1.pop_back();
         v1.push_back(c2);
          int r3=top(c2);
         int r4=int(*(v1.end()-2));
         int r5=gotomove[r4][r3-8];
        
         v1.push_back(char(r5));
        // i++;
          cout<<"stack top "<<*(v1.end()-1)<<endl;
       cout<<"input"<<s1[i]<<endl;
         if(*(v1.end()-1)=='$' && s1[i]=='$')
         {
         	cout<<"ACCEPTED"<<endl;
         	break;
         }

         //int r2=top(c2)-7;
        // int r1=shiftmove[st1][a1];

	}
}
}


}

